name: Deploy

on:
  push:
    branches:
      - master
      - "releases/**"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit == 'false' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install

      - name: Build
        #run: npm run build
        run: npm run build:ssr

      - name: Copy repository contents via scp
        uses: appleboy/scp-action@master
        env:
          HOST: ${{ secrets.SERVER_IP }}
          USERNAME: ${{ secrets.USER }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        with:
          source: "dist, docker-compose.yml, Dockerfile"
          target: "/var/www/${{ github.event.repository.name }}"

      - name: Executing remote command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          USERNAME: ${{ secrets.USER }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          script: ls
